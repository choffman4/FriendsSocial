@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject HttpClient Http

@using System.IdentityModel.Tokens.Jwt

<MudDialog ContentStyle="width: 600px" Style="margin-top: -35vh">
    <DialogContent>
            <MudGrid>
                <MudItem xs="1">
                    <MudAvatar Size="Size.Medium" style="margin-top: 17px;">
                        <MudImage Src="images/toiletvisit.jpg"></MudImage>
                    </MudAvatar>
                </MudItem>
                <MudItem xs="11">
                <MudTextField T="string" Placeholder="What is happening?!" Variant="Variant.Text" @bind-Value="pModel.content" 
                    For="@(() => pModel.content)" Lines="@LineCount" DisableUnderLine="true" />
                </MudItem>
            </MudGrid>
        <MudDivider />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Post">Post</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string UserGuid { get; set; }
    private PostModel pModel;


    private class PostModel
    {
        public string content { get; set; }
        public string title { get; set; } = "title";
        public string userid { get; set; }
        public string privacyType { get; set; } = "friends";
    }

    protected override void OnInitialized()
    {
        pModel = new PostModel
            {
                userid = UserGuid
            };
    }

    private int LineCount { get; set; } = 5;

    void Cancel() => MudDialog.Cancel();

    private async Task Post()
    {

        string url = "http://localhost:8000/post/CreatePost";

        var token = await LocalStorage.GetItemAsync<string>("token");

        // Create a new HttpRequestMessage for the POST request
        using var request = new HttpRequestMessage(HttpMethod.Post, url)
            {
                Content = JsonContent.Create(pModel) // Assuming pModel is your post model
            };

        // Add the Authorization header with the bearer token if it exists
        if (!string.IsNullOrEmpty(token))
        {
            request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        }

        // Send the request
        var response = await Http.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            StateHasChanged();
            MudDialog.Close(DialogResult.Ok(true));
        } else
        {
            // Handle the error case
        }
    }
}